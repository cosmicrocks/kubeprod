apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    name: nginx-ingress-controller
  name: nginx-ingress-controller
  namespace: kubeprod
spec:
  minReadySeconds: 30
  replicas: 2
  selector:
    matchLabels:
      name: nginx-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
      labels:
        name: nginx-ingress-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: nginx-ingress-controller
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 50
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: nginx-ingress-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --configmap=kubeprod/nginx-ingress
        - --ingress-class=nginx
        - --publish-service=kubeprod/nginx-ingress
        - --tcp-services-configmap=kubeprod/tcp-services
        - --udp-services-configmap=kubeprod/udp-services
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: bitnami/nginx-ingress-controller:0.24.1-r4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "6"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 4Gi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 1001
        stdin: false
        tty: false
        volumeMounts: []
      imagePullSecrets: []
      initContainers: []
      serviceAccountName: nginx-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes: []
